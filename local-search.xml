<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>前台表单校验</title>
    <link href="/2022/11/29/%E5%89%8D%E5%8F%B0%E8%A1%A8%E5%8D%95%E6%A0%A1%E9%AA%8C/"/>
    <url>/2022/11/29/%E5%89%8D%E5%8F%B0%E8%A1%A8%E5%8D%95%E6%A0%A1%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<h3 id="理解">理解</h3><ol><li>项目中有一些如注册/登陆表单, 在提交请求前是需要进行表单输入数据校验的</li><li>只有前台表单验证成功才会发请求</li><li>如果校验失败, 以界面红色文本的形式提示</li><li>校验的时机, 除了点击提交时, 还有输入过程中实时进行校验<br>如果自己写很麻烦，所以采用三方库提高效率</li></ol><h3 id="步骤">步骤</h3><ol><li><p>下载三方库 <code>npm i vee-validate</code></p></li><li><p>创建<code>\src\plugins\myPlugins.js</code>文件，</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs js"><br><span class="hljs-comment">// 使用vee-validate进行表单验证</span><br><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> &#123; extend, <span class="hljs-title class_">ValidationObserver</span>, <span class="hljs-title class_">ValidationProvider</span>, localize, configure &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vee-validate&#x27;</span><br><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> rules <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vee-validate/dist/rules&#x27;</span><br><span class="hljs-keyword">import</span> zh_CN <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vee-validate/dist/locale/zh_CN.json&#x27;</span><br><span class="hljs-keyword">import</span> merge <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;lodash/merge&#x27;</span> <span class="hljs-comment">// 用于合并多个对象</span><br><br><span class="hljs-comment">// 配置错误提示文本的样式类名</span><br><span class="hljs-title function_">configure</span>(&#123;<br>  <span class="hljs-attr">classes</span>: &#123;<br>    <span class="hljs-attr">valid</span>: <span class="hljs-string">&#x27;is-valid&#x27;</span>, <span class="hljs-comment">// 验证合法的类名</span><br>    <span class="hljs-attr">invalid</span>: <span class="hljs-string">&#x27;is-invalid&#x27;</span>, <span class="hljs-comment">// 验证不合法的类名</span><br>  &#125;<br>&#125;)<br><br><span class="hljs-comment">// 注册所有规则</span><br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(rules).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">rule</span> =&gt;</span> &#123;<br>  <span class="hljs-title function_">extend</span>(rule, rules[rule])<br>&#125;)<br><br><span class="hljs-comment">// 将自定义的message与内置的中文message合并</span><br><span class="hljs-keyword">const</span> locale = <span class="hljs-title function_">merge</span>(zh_CN, &#123;<br>  <span class="hljs-attr">messages</span>: &#123;<br>    <span class="hljs-attr">is</span>: <span class="hljs-string">&#x27;&#123;_field_&#125;必须与密码相同&#x27;</span>,<br>    <span class="hljs-attr">oneOf</span>: <span class="hljs-string">&#x27;&#123;_field_&#125;必须同意&#x27;</span><br>  &#125;<br>&#125;)<br><span class="hljs-comment">// 指定中文提示信息</span><br><span class="hljs-title function_">localize</span>(<span class="hljs-string">&#x27;zh_CN&#x27;</span>, locale)<br><br><span class="hljs-comment">// 注册用于校验的组件</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">component</span>(<span class="hljs-string">&#x27;ValidationProvider&#x27;</span>, <span class="hljs-title class_">ValidationProvider</span>) <span class="hljs-comment">// 用于输入过程中实时校验</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">component</span>(<span class="hljs-string">&#x27;ValidationObserver&#x27;</span>, <span class="hljs-title class_">ValidationObserver</span>) <span class="hljs-comment">// 用于点击按钮时统一校验</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">&lt;https://github.com/logaretm/vee-validate&gt; 基本使用</span><br><span class="hljs-comment">&lt;https://logaretm.github.io/vee-validate/guide/rules.html#importing-the-rules&gt;  注册所有校验规则</span><br><span class="hljs-comment">&lt;https://logaretm.github.io/vee-validate/guide/state.html#css-classes&gt; 校验失败的样式类名</span><br><span class="hljs-comment">&lt;https://logaretm.github.io/vee-validate/guide/forms.html#basic-example&gt; 提交表单时统一校验</span><br><span class="hljs-comment">&lt;https://logaretm.github.io/vee-validate/guide/localization.html&gt; 指定本地(中文)提示信息</span><br><span class="hljs-comment">*/</span><br><br></code></pre></td></tr></table></figure></li><li><p>在 <em>main.js</em> 中引入表单验证 <code>import './validate'</code></p></li><li><p>在组件中使用</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;register-container&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 注册内容 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;register&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">ValidationObserver</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;form&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>手机号:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ValidationProvider</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;手机号&quot;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;&#123;required: true, regex: /^1\d&#123;10&#125;$/&#125;&quot;</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">slot-scope</span>=<span class="hljs-string">&quot;&#123;errors, classes&#125;&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入你的手机号&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;mobile&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;classes&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error-msg&quot;</span>&gt;</span>&#123;&#123;errors[0]&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ValidationProvider</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>验证码:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ValidationProvider</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;验证码&quot;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;&#123;required: true, regex: /^.&#123;4&#125;$/&#125;&quot;</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">slot-scope</span>=<span class="hljs-string">&quot;&#123;errors, classes&#125;&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入验证码&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;code&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;classes&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- http://182.92.128.115 --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;code&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/api/user/passport/code&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;code&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;updateCode&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error-msg&quot;</span>&gt;</span>&#123;&#123; errors[0] &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ValidationProvider</span>&gt;</span><br><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>登录密码:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ValidationProvider</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;密码&quot;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;&#123;required: true, min: 6, max: 10&#125;&quot;</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">slot-scope</span>=<span class="hljs-string">&quot;&#123; errors, classes &#125;&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入你的登录密码&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;classes&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error-msg&quot;</span>&gt;</span>&#123;&#123; errors[0] &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ValidationProvider</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>确认密码:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ValidationProvider</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;确认密码&quot;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;&#123;required: true, is: password&#125;&quot;</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">slot-scope</span>=<span class="hljs-string">&quot;&#123; errors,classes&#125;&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入确认密码&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;password2&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;classes&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error-msg&quot;</span>&gt;</span>&#123;&#123; errors[0] &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ValidationProvider</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;controls&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ValidationProvider</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;协议&quot;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;&#123;oneOf: [true]&#125;&quot;</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">slot-scope</span>=<span class="hljs-string">&quot;&#123; errors,classes&#125;&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;m1&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;isAgree&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;classes&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>同意协议并注册《尚品汇用户协议》<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error-msg&quot;</span>&gt;</span>&#123;&#123;errors[0]&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ValidationProvider</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click.prevent</span>=<span class="hljs-string">&quot;register&quot;</span>&gt;</span>完成注册<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">ValidationObserver</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Register&#x27;</span>,</span><br><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">      <span class="hljs-attr">mobile</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">// 手机号</span></span><br><span class="language-javascript">      <span class="hljs-attr">password</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">// 密码</span></span><br><span class="language-javascript">      <span class="hljs-attr">password2</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">// 确认密码</span></span><br><span class="language-javascript">      <span class="hljs-attr">code</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">// 一次性图形验证</span></span><br><span class="language-javascript">      <span class="hljs-attr">isAgree</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// 是否同意</span></span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;,</span><br><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">    <span class="hljs-title function_">register</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$refs</span>.<span class="hljs-property">form</span>.<span class="hljs-title function_">validate</span>().<span class="hljs-title function_">then</span>(<span class="hljs-keyword">async</span> (success) =&gt; &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">if</span> (!success) &#123;</span><br><span class="language-javascript">          <span class="hljs-keyword">return</span>;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> &#123;</span><br><span class="language-javascript">          mobile,</span><br><span class="language-javascript">          password,</span><br><span class="language-javascript">          code,</span><br><span class="language-javascript">        &#125; = <span class="hljs-variable language_">this</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-comment">// 2. 发送注册的请求</span></span><br><span class="language-javascript">        <span class="hljs-keyword">try</span> &#123;</span><br><span class="language-javascript">          <span class="hljs-keyword">await</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">$store</span>.<span class="hljs-title function_">dispatch</span>(<span class="hljs-string">&#x27;register&#x27;</span>, &#123;</span><br><span class="language-javascript">            mobile,</span><br><span class="language-javascript">            password,</span><br><span class="language-javascript">            code</span><br><span class="language-javascript">          &#125;)</span><br><span class="language-javascript">          <span class="hljs-comment">// 如果成功了, 跳转到登陆的界面</span></span><br><span class="language-javascript">          <span class="hljs-variable language_">this</span>.<span class="hljs-property">$router</span>.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&#x27;/login&#x27;</span>)</span><br><span class="language-javascript">          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;注册成功&#x27;</span>)</span><br><span class="language-javascript">        &#125; <span class="hljs-keyword">catch</span> (error) &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// 如果失败了, 提示文本</span></span><br><span class="language-javascript">          <span class="hljs-title function_">alert</span>(error.<span class="hljs-property">message</span>)</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">      &#125;)</span><br><span class="language-javascript">      </span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">/* </span></span><br><span class="hljs-comment"><span class="language-javascript">    更新验证码显示: 告诉浏览器重新发请求获取验证码图片</span></span><br><span class="hljs-comment"><span class="language-javascript">    */</span></span><br><span class="language-javascript">    <span class="hljs-title function_">updateCode</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-comment">// 给img重新指定src</span></span><br><span class="language-javascript">      <span class="hljs-comment">// 如果src新的值与原本的值相同, 浏览器不会自动请求获取图片显示</span></span><br><span class="language-javascript">      <span class="hljs-comment">// 解决: 携带时间(当前时间值)戳的参数  ==&gt; 每次指定的src值都不一样==&gt; 浏览器就会自动请求</span></span><br><span class="language-javascript">      <span class="hljs-comment">// this.$refs.code.src = `http://182.92.128.115/api/user/passport/code`  // 是一个http请求</span></span><br><span class="language-javascript">      <span class="hljs-variable language_">this</span>.<span class="hljs-property">$refs</span>.<span class="hljs-property">code</span>.<span class="hljs-property">src</span> = <span class="hljs-string">`/api/user/passport/code`</span> <span class="hljs-comment">// 是一个http请求</span></span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>表单校验</tag>
      
      <tag>vee-validate</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>路由懒加载</title>
    <link href="/2022/11/29/%E8%B7%AF%E7%94%B1%E6%87%92%E5%8A%A0%E8%BD%BD/"/>
    <url>/2022/11/29/%E8%B7%AF%E7%94%B1%E6%87%92%E5%8A%A0%E8%BD%BD/</url>
    
    <content type="html"><![CDATA[<ol><li>当打包构建应用时，JS包会变得非常大，影响页面加载。如果我们能把不同路由对应的组件分割成不同的代码块，然后当路由被访问的时候才加载对应组件，这样就更加高效了</li><li>本质就是Vue 的异步组件在路由组件上的应用</li><li>需要使用动态import语法, 也就是import()函数</li></ol><p>实现:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// import Home from &#x27;@/pages/Home&#x27;</span><br><span class="hljs-comment">/* </span><br><span class="hljs-comment">1. import(&#x27;模块路径&#x27;): webpack会对被引入的模块单独打包</span><br><span class="hljs-comment">2. 路由函数只在第一次请求时才执行, 也就是第一次请求访问对应路由路径时才会请求后台加载对应的js打包文件</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">Home</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title function_">import</span>(<span class="hljs-string">&#x27;@/pages/Home&#x27;</span>)<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
      <tag>路由懒加载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>图片懒加载</title>
    <link href="/2022/11/29/%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD/"/>
    <url>/2022/11/29/%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD/</url>
    
    <content type="html"><![CDATA[<p>图片懒加载的意思是：<br>在图片界面没有进入到可视范围前不加载, 在没有得到图片前先显示loading图片。用于节省流量，提升网页浏览体验。<br><strong>步骤：</strong></p><ol><li><p>安装三方包<code>npm install vue-lazyload</code></p></li><li><p>在 <em>assets</em> 文件内准备图片 <em>loading.gif</em></p></li><li><p>在 <em>main.js</em> 中引入配置</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">VueLazyload</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-lazyload&#x27;</span><br><span class="hljs-keyword">import</span> loading <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/assets/images/loading.gif&#x27;</span> <span class="hljs-comment">//未加载得到图片之前的loading图片</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">VueLazyload</span>, &#123; <span class="hljs-comment">// 内部自定义了一个指令v-lazy</span><br>loading,<br>&#125;)<br></code></pre></td></tr></table></figure></li><li><p>将图片<code>src</code>换成<code>v-lazy=&quot;Img&quot;</code>即可</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>三方库</tag>
      
      <tag>图片懒加载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>开发小技巧</title>
    <link href="/2022/11/29/%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <url>/2022/11/29/%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<h3 id="国内npm提速">国内npm提速</h3><p>确实可以直接安装 <strong>cnpm</strong> ，但可能有bug，所以直接<strong>npm换源</strong>即可。<br>yarn是和npm一样的node包管理工具，但更好用，所以同样换源。<br><strong>npm设置淘宝镜像</strong><br><code>npm config set registry http://registry.npm.taobao.org/</code><br><strong>yarn 设置淘宝镜像</strong><br><code>yarn config set registry http://registry.npm.taobao.org/</code></p><h3 id="清除打包后map文件">清除打包后map文件</h3><p>用于节省项目体积，在 <em>vue.config.js</em> 中加上<code>productionSourceMap:false</code> 字段即可</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
      <tag>开发技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker 学习</title>
    <link href="/2022/11/24/docker%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/11/24/docker%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<blockquote><p>这是我对docker学习的一些记录</p></blockquote><h3 id="1-docker-换源加速下载">1. docker 换源加速下载</h3><p><code>vim /etc/docker/daemon.json</code></p><p>官方源和网易源都不好用，修改daemon.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br> <span class="hljs-attr">&quot;registry-mirrors&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br><span class="hljs-string">&quot;https://mirrors.tuna.tsinghua.edu.cn/&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-string">&quot;http://mirrors.sohu.com/&quot;</span><br><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><strong>重启 docker 服务</strong><br><code>systemctl restart docker</code><br><code>service docker restart</code></p><h3 id="2-dcoker-监控面板-portainer">2. dcoker 监控面板 portainer</h3><p>虽然大家都说这玩意有k8s面板之后就没啥用，但我就想装~</p><p>拉取镜像<br><code>docker pull portainer/portainer</code><br>运行实例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -p 9000:9000 --name portainer \<br>--restart=always \<br>-v /var/run/docker.sock:/var/run/docker.sock \<br>-v /mydata/portainer/data:/data \<br>-d portainer/portainer<br></code></pre></td></tr></table></figure><p>第一次登录的时候需要创建管理员账号，访问地址：<a href="ip:9000">ip:9000</a></p><h3 id="3-docker使用nginx部署前端项目">3. docker使用nginx部署前端项目</h3><p>运行 nginx 容器，将容器文件映射到主机目录</p><h4 id="创建文件夹">创建文件夹</h4><p>确认路径否则可能创建不成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /data/nginx/conf<br><span class="hljs-built_in">mkdir</span> -p /data/nginx/log<br><span class="hljs-built_in">mkdir</span> -p /data/nginx/html<br></code></pre></td></tr></table></figure><h4 id="生成实例">生成实例</h4><p>拉取镜像<br><code>docker pull nginx:latest</code></p><p>生成实例<br><code>docker run --name nginx -p 80:80 -d nginx</code><br>访问80端口确认生效</p><h4 id="复制文件">复制文件</h4><p>将容器nginx.conf文件复制到宿主机<br><code>docker cp nginx:/etc/nginx/nginx.conf /root/data/nginx/conf/nginx.conf</code><br>将容器conf.d文件夹下内容复制到宿主机<br><code>docker cp nginx:/etc/nginx/conf.d /root/data/nginx/conf/conf.d</code><br>将容器中的html文件夹复制到宿主机<br><code>docker cp nginx:/usr/share/nginx/html /root/data/nginx/</code></p><h4 id="删除正在运行的nginx容器">删除正在运行的nginx容器</h4><p><code>docker rm -f nginx</code></p><h4 id="重新运行容器并设置文件映射">重新运行容器并设置文件映射</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run \<br>-p 80:80 \<br>--name nginx \<br>-v /root/data/nginx/conf/nginx.conf:/etc/nginx/nginx.conf \<br>-v /root/data/nginx/conf/conf.d:/etc/nginx/conf.d \<br>-v /root/data/nginx/log:/var/log/nginx \<br>-v /root/data/nginx/html:/usr/share/nginx/html \<br>-d nginx:latest<br></code></pre></td></tr></table></figure><h3 id="docker-compose-学习">docker-compose 学习</h3><p><code>docker-compose -f docker-compose.yml up -d</code></p>]]></content>
    
    
    <categories>
      
      <category>后端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>项目开发遇到的问题</title>
    <link href="/2022/11/21/%E6%88%91%E7%9A%84%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E6%94%B6%E9%9B%86/"/>
    <url>/2022/11/21/%E6%88%91%E7%9A%84%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h3 id="开发问题"><a href="#开发问题" class="headerlink" title="开发问题"></a>开发问题</h3><h4 id="1-list-接口有数据但无法处理"><a href="#1-list-接口有数据但无法处理" class="headerlink" title="1. list 接口有数据但无法处理"></a>1. list 接口有数据但无法处理</h4><ul><li><p>原因：<br><code>/api/list</code>这个接口请求成功后，数据拿不出来为<code>undefined</code>，赋值也做不到，<br>应该是写法问题，我真找不到原因呀~~~<br>首先 rap2mock 的数据没问题，成功带参数请求</p></li><li><p>解决方式：</p><ol><li><p>把涉及此接口相关组件全部重写检查。<br>11&#x2F;13 最后一次检查，store 编写无错误</p></li><li><p>axios 官方直接 post 请求无错误，<br>应该是@&#x2F;api 的问题，检查了下，没找到问题。</p></li><li><p>那为什么呢？我写的明明全部没错！！！</p></li></ol></li><li><p>最终解决方式<br>讲的 api 封装有问题，导致接口数接不到，直接使用 axios.post 原生请求</p></li><li><p>待完成：<br>一分完美的 axios 封装</p></li></ul><h3 id="2-v-for-的数据未显示"><a href="#2-v-for-的数据未显示" class="headerlink" title="2. v-for 的数据未显示"></a>2. v-for 的数据未显示</h3><ul><li>原因：<code>response</code>只脱掉一层，应该再脱一层</li></ul>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mockjs的使用</title>
    <link href="/2022/11/09/mock%E6%8E%A5%E5%8F%A3/"/>
    <url>/2022/11/09/mock%E6%8E%A5%E5%8F%A3/</url>
    
    <content type="html"><![CDATA[<p>在开发前在本地mock接口</p><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><ol><li><p>安装 mockjs <code>npm i -D mockjs</code><br>  创建<code>src/mock</code>文件夹,准备好相应 json 文件<br>  创建<code>mockServe.js</code>文件，插入如下代码</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Mock</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;mockjs&#x27;</span><br><span class="hljs-keyword">import</span> banner <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./banner.json&#x27;</span> <br><span class="hljs-title class_">Mock</span>.<span class="hljs-title function_">mock</span>(<span class="hljs-string">&#x27;/mock/banner&#x27;</span>, &#123; <span class="hljs-attr">code</span>: <span class="hljs-number">200</span>, <span class="hljs-attr">data</span>: banner &#125;) #mock路径和数据<br></code></pre></td></tr></table></figure></li><li><p>在<code>main.js</code>中引入 <code>import &quot;@/mock/mockServe.js&quot;;</code></p></li><li><p>在请求路径前加入<code>/mock</code>即可访问</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mock接口</tag>
      
      <tag>三方库</tag>
      
      <tag>mockjs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实现轮播图</title>
    <link href="/2022/11/08/%E8%BD%AE%E6%92%AD%E5%9B%BE/"/>
    <url>/2022/11/08/%E8%BD%AE%E6%92%AD%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li><p>执行<code>npm i -S swiper@5</code>,添加 swiper 库，<strong>因为 6 可能有 bug,所以用 5</strong>，</p></li><li><p>引包（css）,在<code>main.js</code>中引入<code>import &quot;swiper/css/swiper.min.css&quot;</code></p></li><li><p>书写 template 中 DOM 结构</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;swiper-container&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;cur&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;swiper-wrapper&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;swiper-slide&quot;</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;carousel in list&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;carousel.id&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;carousel.imgUrl&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- 如果需要分页器 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;swiper-pagination&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>  <span class="hljs-comment">&lt;!-- 如果需要导航按钮 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;swiper-button-prev&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;swiper-button-next&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>生成 Swiper 实例，实现展示效果,<strong>必须在所有 DOM 结构生成后起效</strong><br>  先引入<code>import Swiper from &quot;swiper&quot;;</code><br>  在生命周期或方法里添加如下代码将 swiper 实例化</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> mySwiper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Swiper</span>(<span class="hljs-string">&quot;获取到的DOM节点&quot;</span>, &#123;<br>    <span class="hljs-attr">loop</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-comment">// 如果需要分页器</span><br>    <span class="hljs-attr">pagination</span>: &#123;<br>      <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;.swiper-pagination&quot;</span>,<br>      <span class="hljs-comment">//点击小球的时候也切换图片</span><br>      <span class="hljs-attr">clickable</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>    <span class="hljs-comment">// 如果需要前进后退按钮</span><br>    <span class="hljs-attr">navigation</span>: &#123;<br>      <span class="hljs-attr">nextEl</span>: <span class="hljs-string">&quot;.swiper-button-next&quot;</span>,<br>      <span class="hljs-attr">prevEl</span>: <span class="hljs-string">&quot;.swiper-button-prev&quot;</span>,<br>    &#125;,<br>  &#125;);<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>轮播图</tag>
      
      <tag>三方库</tag>
      
      <tag>swiper</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
